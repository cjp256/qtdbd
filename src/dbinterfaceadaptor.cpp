/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a db_adaptor ../db.xml
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbinterfaceadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DbInterfaceAdaptor
 */

DbInterfaceAdaptor::DbInterfaceAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DbInterfaceAdaptor::~DbInterfaceAdaptor()
{
    // destructor
}

QString DbInterfaceAdaptor::dump(const QString &path)
{
    // handle method call com.citrix.xenclient.db.dump
    QString value;
    QMetaObject::invokeMethod(parent(), "dump", Q_RETURN_ARG(QString, value), Q_ARG(QString, path));
    return value;
}

bool DbInterfaceAdaptor::exists(const QString &path)
{
    // handle method call com.citrix.xenclient.db.exists
    bool ex;
    QMetaObject::invokeMethod(parent(), "exists", Q_RETURN_ARG(bool, ex), Q_ARG(QString, path));
    return ex;
}

void DbInterfaceAdaptor::inject(const QString &path, const QString &value)
{
    // handle method call com.citrix.xenclient.db.inject
    QMetaObject::invokeMethod(parent(), "inject", Q_ARG(QString, path), Q_ARG(QString, value));
}

QStringList DbInterfaceAdaptor::list(const QString &path)
{
    // handle method call com.citrix.xenclient.db.list
    QStringList value;
    QMetaObject::invokeMethod(parent(), "list", Q_RETURN_ARG(QStringList, value), Q_ARG(QString, path));
    return value;
}

QString DbInterfaceAdaptor::read(const QString &path)
{
    // handle method call com.citrix.xenclient.db.read
    QString value;
    QMetaObject::invokeMethod(parent(), "read", Q_RETURN_ARG(QString, value), Q_ARG(QString, path));
    return value;
}

QByteArray DbInterfaceAdaptor::read_binary(const QString &path)
{
    // handle method call com.citrix.xenclient.db.read_binary
    QByteArray value;
    QMetaObject::invokeMethod(parent(), "read_binary", Q_RETURN_ARG(QByteArray, value), Q_ARG(QString, path));
    return value;
}

void DbInterfaceAdaptor::rm(const QString &path)
{
    // handle method call com.citrix.xenclient.db.rm
    QMetaObject::invokeMethod(parent(), "rm", Q_ARG(QString, path));
}

void DbInterfaceAdaptor::write(const QString &path, const QString &value)
{
    // handle method call com.citrix.xenclient.db.write
    QMetaObject::invokeMethod(parent(), "write", Q_ARG(QString, path), Q_ARG(QString, value));
}

